import sqlite3
import telebot
import xlsxwriter
import os
from telebot import types

#C:/Users/glebm/OneDrive/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/programming/pythonProject/photo/
#C:/Users/–ì–ª–µ–±/Desktop/–£—á—ë–±–∞/–ü—Ä–æ–≥–∞/PythonProject/photo/

events = {}
event_name = ''

private_club_info = f"""<b>–ó–∞–∫—Ä—ã—Ç—ã–π –ë–∏–∑–Ω–µ—Å-–∫–ª—É–± </b>üí†\n
–≠—Ç–æ –∫–æ–º—å—é–Ω–∏—Ç–∏ —Å–∏–ª—å–Ω–µ–π—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤-–ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π –∏ —Ç–æ–ø-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π.\n
–¶–µ–Ω–Ω–æ—Å—Ç—å –ó–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–ª—É–±–∞:
‚Ä¢ –æ–±–º–µ–Ω —Å–≤—è–∑—è–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
‚Ä¢ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ–µ–∫—Ç–æ–≤
‚Ä¢ –∑–∞–∫—Ä—ã—Ç—ã–µ –≤—Å—Ç—Ä–µ—á–∏ —Å –ª–∏–¥–∏—Ä—É—é—â–∏–º–∏ –Ω–∞ —Ä—ã–Ω–∫–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è–º–∏ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏
‚Ä¢ —Å–∏–ª—å–Ω–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –Ω–∞ –≤–∑–∞–∏–º–Ω—ã–π —Ä–æ—Å—Ç –∏ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥\n
–£–∂–µ —Å–µ–π—á–∞—Å –≤ –∫–ª—É–±–µ –Ω–∞—à–∏ —Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –ø—Ä–æ–≤–æ–¥—è—Ç –≤—Å—Ç—Ä–µ—á–∏ –∏ –∑–∞–ø—É—Å–∫–∞—é—Ç —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ–µ–∫—Ç—ã.\n
–ó–∞–∫—Ä—ã—Ç—ã–π –ë–∏–∑–Ω–µ—Å-–∫–ª—É–± –≤—Ö–æ–¥–∏—Ç –≤ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ë–∏–∑–Ω–µ—Å-–∫–ª—É–±–æ–≤ –†–æ—Å—Å–∏–∏ (–û–ë–ö–† https://–æ–±–∫—Ä.—Ä—Ñ), –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É —Ü–µ–Ω–Ω–æ—Å—Ç—å –∫–ª—É–±–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞–µ—Ç –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑, –∞ —Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –∏–º–µ—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ–º–º—É–Ω–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞–º–∏ –¥—Ä—É–≥–∏—Ö –ó–∞–∫—Ä—ã—Ç—ã—Ö –∫–ª—É–±–æ–≤, –≤—Ö–æ–¥—è—â–∏—Ö –≤ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ.\n
–ó–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–± ‚Äì –Ω–∞–¥–µ–∂–Ω–∞—è –±–∏–∑–Ω–µ—Å-—Å–µ—Ç—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –æ–±–º–µ–Ω–∞ –æ–ø—ã—Ç–æ–º –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞ –¥–ª—è —Ä–æ—Å—Ç–∞.\n
–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –º–∏–Ω–∏–º—É–º –æ–¥–Ω–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é:
 ‚Ä¢ –Ω–∞–ª–∏—á–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —Å –æ–±–æ—Ä–æ—Ç–æ–º –±–æ–ª–µ–µ 6 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –≤ –≥–æ–¥
 ‚Ä¢ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –æ–¥–Ω–æ–≥–æ –∏ –±–æ–ª–µ–µ –±–∏–∑–Ω–µ—Å–æ–≤ –æ—Ç 1 –º–∏–ª–ª–∏–æ–Ω–∞ –≤ –≥–æ–¥
 ‚Ä¢ –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ç–æ–ø-–º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏\n
–û—Å—Ç–∞–≤—å –∑–∞—è–≤–∫—É –∏ —Å—Ç–∞–Ω—å —á–∞—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å-–∫–æ–º—å—é–Ω–∏—Ç–∏ –ú–ì–Æ–ê: https://forms.gle/fsKJfsRDkZBPYDdEA \n
*–ï—Å–ª–∏ –≤—ã —Å–∞–º–∏ –Ω–µ –∏–º–µ–µ—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏–ª–∏ –æ–ø—ã—Ç–∞ –≤ —Ç–æ–ø-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–µ, –Ω–æ –∑–Ω–∞–∫–æ–º—ã —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –¥–ª—è –ó–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–ª—É–±–∞, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ–≥–æ –∫ –Ω–∞–º, –∏ –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Ç–±–æ—Ä–∞, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –æ–¥–Ω—É –∏–∑ –Ω–∞—à–∏—Ö –∑–∞–∫—Ä—ã—Ç—ã—Ö –≤—Å—Ç—Ä–µ—á.\n
---&gt <a href="https://www.youtube.com/watch?v=hhBjY5_waFo"> –ù–∞—à –ø—Ä–æ–º–æ —Ä–æ–ª–∏–∫ </a> &lt---"""

public_club_info= f"""<b>‚ö°Ô∏è –ë–∏–∑–Ω–µ—Å-–∫–ª—É–± –ú–ì–Æ–ê - –õ—é–¥–∏. –ó–Ω–∞–Ω–∏—è. –û–ø—ã—Ç.</b> \n
‚Ä¢ –æ–¥–∏–Ω –∏–∑ –ª—É—á—à–∏—Ö —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö –ë–∏–∑–Ω–µ—Å-–∫–ª—É–±–æ–≤ –†–æ—Å—Å–∏–∏\n
‚Ä¢ –±–∏–∑–Ω–µ—Å-—Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤–µ–¥—É—â–µ–≥–æ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –≤—É–∑–∞ –†–æ—Å—Å–∏–∏ ‚Äì –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–º–µ–Ω–∏ –û.–ï. –ö—É—Ç–∞—Ñ–∏–Ω–∞ (–ú–ì–Æ–ê) \n
‚Ä¢ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ä—ã–≤–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä–æ–≤, –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π –∏ –¢–û–ü–æ–≤ –≤ —Å–≤–æ–µ–π —Å—Ñ–µ—Ä–µ \n
üéØ–ù–∞—à–∞ –º–∏—Å—Å–∏—è - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –¥–æ—Å—Ç–∏–≥—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –±–∏–∑–Ω–µ—Å-—Å—Ä–µ–¥–µ, –¥–ª—è –∫—Ä–∞—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞! \n
–£ –Ω–∞—Å –≤—ã –±—É–¥–µ—Ç–µ:
 ‚Ä¢ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –∏ –∑–∞–∫—Ä—ã—Ç—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å —Ç–æ–ø–∞–º–∏ —Ä—ã–Ω–∫–∞
 ‚Ä¢ –±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é —É –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π 
 ‚Ä¢ –≤–µ—Å—Ç–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –Ω–∞ —Ç–µ–º—É –±–∏–∑–Ω–µ—Å–∞
 ‚Ä¢ –ø–æ—Å–µ—â–∞—Ç—å –±–∏–∑–Ω–µ—Å-—Ñ–æ—Ä—É–º—ã –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n
–ë–∏–∑–Ω–µ—Å-–∫–ª—É–± –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å–ø–æ—Å–æ–±–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö –≤ –±–∏–∑–Ω–µ—Å–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ –≥–æ—Ä—è—Ç —Å–≤–æ–∏–º –¥–µ–ª–æ–º. \n
–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—à—å—Å—è –±–∏–∑–Ω–µ—Å–æ–º? –£–∂–µ —è–≤–ª—è–µ—à—å—Å—è –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–º –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —Ä—ã–Ω–æ–∫? 
–í—Å—Ç—É–ø–∞–π –≤ –ë–∏–∑–Ω–µ—Å-–∫–ª—É–±! –ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à–∏ –≥—Ä—É–ø–ø—É/–∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ --> <a href="https://vk.com/businessclub_msal"> VK </a> –∏ <a href="https://t.me/business_clubMSAL"> TG </a>"""

user_agreement = f""" """

bot = telebot.TeleBot(token='6624656705:AAEzIo8t1mZAyhcpALT-hzjXQGVBxua5F-Q', skip_pending=True)

btn1 = types.KeyboardButton('üì≤ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
btn2 = types.KeyboardButton('üìã –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ')
btn3 = types.KeyboardButton('üëÄ –ò–≤–µ–Ω—Ç—ã')
btn4 = types.KeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≤–µ–Ω—Ç')
btn5 = types.KeyboardButton('üëâ –í—ã–±—Ä–∞—Ç—å –∏–≤–µ–Ω—Ç')
btn6 = types.KeyboardButton('üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±')
btn7 = types.KeyboardButton('üëÄ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏')
btn8 = types.KeyboardButton('üìÑ –§–∞–π–ª')
btn9 = types.KeyboardButton('1. –§–ò–û')
btn10 = types.KeyboardButton('2. –í—É–∑')
btn11 = types.KeyboardButton('3. –ö—É—Ä—Å')
btn12 = types.KeyboardButton('4. –ò–Ω—Å—Ç–∏—Ç—É—Ç (—Ñ–∞–∫—É–ª—å—Ç–µ—Ç)')
btn13 = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
btn14 = types.KeyboardButton('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
btn15 = types.KeyboardButton('üìÉ –û –∫–ª—É–±–µ')
btn16 = types.KeyboardButton('üÖæÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç')
btn17 = types.KeyboardButton('üÖæÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ')
btn18 = types.KeyboardButton('‚úÖ –î–∞')
btn19 = types.KeyboardButton('üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')
btn20 = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')
btn21 = types.KeyboardButton('üë®‚Äçüë®‚Äçüë¶ –£—á–∞—Å—Ç–Ω–∏–∫–∏')
btn22 = types.KeyboardButton('‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å')
btn23 = types.KeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å')
btn24 = types.KeyboardButton('‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω')
btn25 = types.KeyboardButton('‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω')



@bot.message_handler(commands=['start', 'hello', 'menu'])
def start_message(message):
    create_table(message, 'users')
    markup = main_menu_markup(message.from_user.id)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç –±–∏–∑–Ω–µ—Å-–∫–ª—É–±–∞ –ú–ì–Æ–ê', reply_markup=markup)


@bot.message_handler(commands=['become_admin'])
def become_admin(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
    bot.register_next_step_handler(message, enter_admin_password)


@bot.message_handler(commands=['info'])
def get_public_club_info(message):
    club_info = public_club_info
    inline_markup = types.InlineKeyboardMarkup()
    inline_btn1 = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞ –í–ö', url = 'https://vk.com/businessclub_msal')
    inline_btn2 = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞ –¢–ì', url = 'https://t.me/business_clubMSAL')
    inline_markup.add(inline_btn1, inline_btn2)
    bot.send_message(message.chat.id, club_info, reply_markup = inline_markup, parse_mode='html')


@bot.message_handler(commands=['private_info'])
def get_private_club_info(message):
    club_info = private_club_info
    inline_markup = types.InlineKeyboardMarkup()
    inline_btn1 = types.InlineKeyboardButton(text='–ù–∞—à–µ –ø—Ä–æ–º–æ', url = 'https://www.youtube.com/watch?v=hhBjY5_waFo')
    inline_markup.add(inline_btn1)
    bot.send_message(message.chat.id, club_info, reply_markup = inline_markup, parse_mode='html')


def enter_admin_password(message):
    if message.text == 'admin_password':
        change_user_data(message, 'admin_rights', True)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn2, btn7, btn4, btn5)
        bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–æ, {message.from_user.first_name}! –¢–µ–ø–µ—Ä—å —Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, f'–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π')


@bot.message_handler(content_types=['text'])
def func(message):
    global event_name
    if message.text == 'üì≤ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è':
        info_list = get_personal_info(message.from_user.id)
        if info_list:
            markup = main_menu_markup(message.from_user.id)
            bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', reply_markup=markup)
            return
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn24, btn25)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç!\n –ù–æ —Å–ø–µ—Ä–≤–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n https://docs.google.com/document/d/1QfU-2YYUstVmTLHTee5JebKkd5jEB0eQnOj8SCPIh-I/edit#heading=h.6852be3h0van', reply_markup=markup)
        bot.register_next_step_handler(message, user_agreement)

    elif message.text == 'üëÄ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
        info_list = get_all_info(message)
        info = ''
        for el in info_list:
            if el[4] == '':
                info += f'{el[2]} {el[3]} {el[5]}-–π –∫—É—Ä—Å\n'
            else:
                info += f'{el[2]} {el[3]} {el[4]} {el[5]}-–π –∫—É—Ä—Å\n'
        bot.send_message(message.chat.id, info)

    elif message.text == 'üìã –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ':
        info_list = get_personal_info(message.from_user.id)
        if info_list[0][4] == '':
            info = f'{info_list[0][2]}\n{info_list[0][3]} {info_list[0][5]}-–π –∫—É—Ä—Å'
        else:
            info = f'{info_list[0][2]}\n{info_list[0][3]} {info_list[0][4]} {info_list[0][5]}-–π –∫—É—Ä—Å'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn13, btn14)
        bot.send_message(message.chat.id, info, reply_markup=markup)

    elif  message.text == '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        
        info_list = get_personal_info(message.from_user.id)
        if info_list[0][4] == '':
            markup.add(btn9, btn10, btn11, btn13)
        else:
            markup.add(btn9, btn10, btn11, btn12, btn13)
        bot.send_message(message.chat.id, '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=markup)

    elif  message.text == '1. –§–ò–û':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û (–ø–æ–ª–Ω–æ—Å—Ç—å—é)', reply_markup=markup)
        bot.register_next_step_handler(message, change_user_data_from_input, 'FIO')

    elif  message.text == '2. –í—É–∑':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≤—É–∑–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ú–ì–Æ–ê"', reply_markup=markup)
        bot.register_next_step_handler(message, change_user_data_from_input, 'institute')

    elif  message.text == '3. –ö—É—Ä—Å':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç', reply_markup=markup)
        bot.register_next_step_handler(message, change_user_data_from_input, 'course')

    elif  message.text == '4. –ò–Ω—Å—Ç–∏—Ç—É—Ç (—Ñ–∞–∫—É–ª—å—Ç–µ—Ç)':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –≤ –≤–∏–¥–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ò–ë–ü"', reply_markup=markup)
        bot.register_next_step_handler(message, change_user_data_from_input, 'faculty')

    elif  message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥' or message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
        markup = main_menu_markup(message.from_user.id)
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è', reply_markup=markup)

    elif message.text == 'üìÉ –û –∫–ª—É–±–µ':
        club_info = public_club_info
        inline_markup = types.InlineKeyboardMarkup()
        inline_btn1 = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞ –í–ö', url = 'https://vk.com/businessclub_msal')
        inline_btn2 = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞ –¢–ì', url = 'https://t.me/business_clubMSAL')
        inline_markup.add(inline_btn1, inline_btn2)
        bot.send_message(message.chat.id, club_info, reply_markup = inline_markup, parse_mode='html')

    elif message.text == 'üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±':
        club_info = private_club_info
        inline_markup = types.InlineKeyboardMarkup()
        inline_btn1 = types.InlineKeyboardButton(text='–ù–∞—à–µ –ø—Ä–æ–º–æ', url = 'https://www.youtube.com/watch?v=hhBjY5_waFo')
        inline_markup.add(inline_btn1)
        bot.send_message(message.chat.id, club_info, reply_markup = inline_markup, parse_mode='html')

    elif message.text == 'üëÄ –ò–≤–µ–Ω—Ç—ã' or message.text == 'üëâ –í—ã–±—Ä–∞—Ç—å –∏–≤–µ–Ω—Ç':
        if events == {}:
            bot.send_message(message.chat.id, '–ü–æ–∫–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–µ—Ç\n–Ø –Ω–∞–ø–∏—à—É —Ç–µ–±–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è!')
        else:
            markup = types.InlineKeyboardMarkup()
            i = 1
            events_info = '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:\n'
            for key in events:
                events_info += str(i) + '. ' + key + '\n'
                markup.add(types.InlineKeyboardButton(text= f'{i}', callback_data = key))
                i += 1
            bot.send_message(message.chat.id, events_info, reply_markup=markup)

    elif message.text == '‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn16, btn17, btn13)
        bot.send_message(message.chat.id, '–ß—Ç–æ –º–µ–Ω—è–µ–º?', reply_markup=markup)
        bot.register_next_step_handler(message, change_event, event_name)
    
    elif message.text == 'üë®‚Äçüë®‚Äçüë¶ –£—á–∞—Å—Ç–Ω–∏–∫–∏':
        try:
            info_list = get_event_info(message, event_name)
            info = ''
            for el in info_list:
                if el[4] == '':
                    info += f'{el[2]} {el[3]} {el[5]}-–π –∫—É—Ä—Å\n'
                else:
                    info += f'{el[2]} {el[3]} {el[4]} {el[5]}-–π –∫—É—Ä—Å\n'
            if info == '':
                markup = main_menu_markup(message.from_user.id)
                bot.send_message(message.chat.id, '–ü–æ–∫–∞ —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', reply_markup=markup)
                return
            bot.send_message(message.chat.id, info)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(btn8, btn20)
            bot.send_message(message.chat.id, '–ß—Ç–æ –¥–∞–ª—å—à–µ?', reply_markup=markup)
        except telebot.apihelper.ApiTelegramException as error:
            markup = main_menu_markup(message.from_user.id)
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\nApiTelegramException: {error}', reply_markup=markup)
        except BaseException as error:
            markup = main_menu_markup(message.from_user.id)
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{error}', reply_markup=markup)

    elif message.text == "üìÑ –§–∞–π–ª":
        markup = main_menu_markup(message.from_user.id)
        try:
            create_xlsx_file(message, event_name)
            file = open('temp.xlsx', 'rb+')
            bot.send_document(message.chat.id, file, reply_markup=markup)
            file.close()
            os.remove('temp.xlsx')
        except telebot.apihelper.ApiTelegramException as error:
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\nApiTelegramException: {error}', reply_markup=markup)
        except OSError as error:
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\nOSError: {error}', reply_markup=markup)
        except BaseException as error:
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{error}', reply_markup=markup)

    elif message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å':
        try:
            conn = sqlite3.connect('database.sql')
            cur = conn.cursor()
            cur.execute('DROP TABLE IF EXISTS %s' % (event_name))
            conn.commit()
            cur.close()
            conn.close()
            src = events[event_name][1]
            os.remove(src)
            del events[event_name]
            markup = main_menu_markup(message.from_user.id)
            bot.send_message(message.chat.id, f'–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ \"{event_name}\" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ', reply_markup=markup)
            event_name = ''
        except sqlite3.Error as error:
            markup = main_menu_markup(message.from_user.id)
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:\n{error}', reply_markup=markup)
        except BaseException as error:
            markup = main_menu_markup(message.from_user.id)
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{error}', reply_markup=markup)
        
    elif message.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≤–µ–Ω—Ç':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–≤–µ–Ω—Ç–∞', reply_markup=markup)
        bot.register_next_step_handler(message, add_event_name)

    elif message.text == 'üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É':
        inline_markup = types.InlineKeyboardMarkup()
        inline_markup.add(types.InlineKeyboardButton('–Ø –±—É–¥—É', callback_data='register_on_event_callback'))
        info = get_all_info(message)
        for el in info:
            src = events[event_name][1]
            with open(src, 'rb') as photo:
                bot.send_photo(el[1], photo, caption=events[event_name][0], reply_markup=inline_markup)
        reply_markup = main_menu_markup(message.from_user.id)
        bot.send_message(message.chat.id, '–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', reply_markup=reply_markup)

    else:
        bot.send_message(message.chat.id, '–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –ø–æ–∫–∞ –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω..')


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'register_on_event_callback':
        try:
            global event_name
            conn = sqlite3.connect('database.sql')
            cur = conn.cursor()
            cur.execute('SELECT * FROM users WHERE id = ?', (callback.message.chat.id, ))
            info = cur.fetchall()[0]
            cur.execute('INSERT INTO `%s` (id, chat_id, FIO, institute, faculty, course, admin_rights) VALUES (%s, %s, "%s", "%s", "%s", %s, %s)' % (event_name, info[0], info[1], info[2], info[3], info[4], info[5], info[6]))
            conn.commit()
            cur.close()
            conn.close()
            markup = main_menu_markup(callback.message.chat.id)
            bot.send_message(callback.message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –≤—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ!', reply_markup=markup)
        except sqlite3.IntegrityError:
            markup = main_menu_markup(callback.message.chat.id)
            bot.send_message(callback.message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', reply_markup=markup)
        except BaseException as error:
            markup = main_menu_markup(callback.message.chat.id)
            bot.send_message(callback.message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{error}', reply_markup=markup)
        finally:
            bot.answer_callback_query(callback.id)
            return
    else:
        try:
            event_name = callback.data
            if (event_name in events) == False:
                if not events:
                    markup = main_menu_markup(callback.message.chat.id)
                    bot.send_message(callback.message.chat.id, '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–µ—Ç', reply_markup=markup)
                    bot.answer_callback_query(callback.id)
                    return
                else:
                    markup = types.InlineKeyboardMarkup()
                    i = 1
                    events_info = '–≠—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ. –í–æ—Ç –∞–∫—Ç—É–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫:\n\n'
                    for key in events:
                        events_info += str(i) + '. ' + key + '\n'
                        markup.add(types.InlineKeyboardButton(text= f'{i}', callback_data = key))
                        i += 1
                    bot.send_message(callback.message.chat.id, events_info, reply_markup=markup)
                    bot.answer_callback_query(callback.id)
                    return
            inline_markup = types.InlineKeyboardMarkup()
            inline_markup.add(types.InlineKeyboardButton('–Ø –±—É–¥—É', callback_data='register_on_event_callback'))
            src = events[event_name][1]
            with open(src, 'rb') as photo:
                bot.send_photo(callback.message.chat.id, photo, caption=event_name)
                bot.send_message(callback.message.chat.id, events[event_name][0])
            bot.answer_callback_query(callback.id)
            if is_admin(callback.message.chat.id):
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.add(btn21, btn22, btn23, btn20, btn19)
                bot.send_message(callback.message.chat.id, '–ß—Ç–æ –¥–∞–ª—å—à–µ?', reply_markup=markup)
        except BaseException as error:
            markup = main_menu_markup(callback.message.chat.id)    
            bot.send_message(callback.message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{error}', reply_markup=markup) 


def create_xlsx_file(message, event_name):
    info_list = get_event_info(message, event_name)
    try:
        workbook = xlsxwriter.Workbook('temp.xlsx')
        worksheet = workbook.add_worksheet()
        worksheet.set_column(0, 0, 30)
        worksheet.set_column(1, 1, 15)
        worksheet.set_column(2, 2, 15)
        worksheet.set_column(3, 3, 5)
        bold = workbook.add_format({"bold": True})
        worksheet.write(0, 0, '–§–ò–û', bold)
        worksheet.write(0, 1, '–í—É–∑', bold)
        worksheet.write(0, 2, '–ò–Ω—Å—Ç–∏—Ç—É—Ç', bold)
        worksheet.write(0, 3, '–ö—É—Ä—Å', bold)
        i = 1
        for el in info_list:
            worksheet.write(i, 0, el[2])
            worksheet.write(i, 1, el[3])
            worksheet.write(i, 2, el[4])
            worksheet.write(i, 3, el[5])
            i += 1
        workbook.close()
    except BaseException as error:
        markup = main_menu_markup(message.from_user.id)    
        bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{error}', reply_markup=markup)


def is_admin(id):
    info_list = get_personal_info(id)
    if info_list and info_list[0][6] == True:
        return True
    else:
        return False
        

def create_table(message, table_name):
    try:
        conn = sqlite3.connect('database.sql')
        cur = conn.cursor()
        cur.execute(f"""CREATE TABLE IF NOT EXISTS `{table_name}` (
                    id int auto_increment primary key,
                    chat_id int,
                    FIO varchar(50),
                    institute varchar(50),
                    faculty varchar(50),
                    course int,
                    admin_rights bool
                    )""")
        conn.commit()
        cur.close()
        conn.close()
    except sqlite3.Error as error:
        bot.send_message(message.chat.id, f'{error}\n–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö')
        

def add_event_name(message):
    global event_name
    if type(message.text) != str:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞')
        bot.register_next_step_handler(message, add_event_name)
        return
    event_name = message.text
    events[event_name] = ['', '']
    create_table(message, event_name)
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
    bot.register_next_step_handler(message, add_event_description, event_name)


def add_event_description(message, event_name):
    if type(message.text) != str:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞')
        bot.register_next_step_handler(message, add_event_description)
        return
    event_description = message.text
    events[event_name][0] = event_description
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å –ø–æ—Å—Ç–µ—Ä')
    bot.register_next_step_handler(message, add_event_photo, event_name)


def add_event_photo(message, event_name):
    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = message.document.file_name
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)

        events[event_name][1] = src
        bot.send_message(message.chat.id, f'–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –í–æ—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:')
        with open(src, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption=event_name)
            bot.send_message(message.chat.id, events[event_name][0])

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn16, btn17, btn18)
        bot.send_message(message.chat.id, '–í—Å—ë –≤–µ—Ä–Ω–æ?', reply_markup=markup)
        bot.register_next_step_handler(message, change_event, event_name)
    except telebot.apihelper.ApiTelegramException as error:
        bot.send_message(message.chat.id, f'{error}\n–û–ø–∏—Å–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ ({len(events[event_name][0])}), –æ–ø–∏—à–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ–∫–æ—Ä–æ—á–µ:')
        bot.register_next_step_handler(message, add_event_description, event_name)
    except Exception as error:
        bot.reply_to(message, f'{error}\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–∏–Ω—å—Ç–µ –ø–æ—Å—Ç–µ—Ä –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞')
        bot.register_next_step_handler(message, add_event_photo, event_name)
    

def change_event(message, event_name):
    try:    
        if message.text == '‚úÖ –î–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(btn19, btn20)
            bot.send_message(message.chat.id, '–ß—Ç–æ –¥–∞–ª—å—à–µ?', reply_markup=markup)

        elif message.text == 'üÖæÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç':
            markup = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '–í–≤–∏–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ', reply_markup=markup)
            bot.register_next_step_handler(message, change_event_description, event_name)

        elif message.text == 'üÖæÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ':
            markup = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –∑–∞–Ω–æ–≤–æ', reply_markup=markup)
            bot.register_next_step_handler(message, change_event_photo, event_name)
    except:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn16, btn17, btn18)
        bot.send_message(message.chat.id, '–í—Å—ë –≤–µ—Ä–Ω–æ?', reply_markup=markup)
        bot.register_next_step_handler(message, change_event, event_name)

        

def change_event_description(message, event_name):
    try:
        event_description = message.text
        events[event_name][0] = event_description
        src = events[event_name][1]
        with open(src, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption=event_name)
            bot.send_message(message.chat.id, events[event_name][0])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn16, btn17, btn18)
        bot.send_message(message.chat.id, '–í—Å—ë –≤–µ—Ä–Ω–æ?', reply_markup=markup)
        bot.register_next_step_handler(message, change_event, event_name)
    except:
        bot.send_message(message.chat.id, '–í–≤–∏–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ, –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞')
        bot.register_next_step_handler(message, change_event_description, event_name)


def change_event_photo(message, event_name):
    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = events[event_name][1]
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        
        bot.send_message(message.chat.id, f'–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –í–æ—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:')
        with open(src, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption=event_name)
            bot.send_message(message.chat.id, events[event_name][0])
        
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn16, btn17, btn18)
        bot.send_message(message.chat.id, '–í—Å—ë –≤–µ—Ä–Ω–æ?', reply_markup=markup)
        bot.register_next_step_handler(message, change_event, event_name)
    except AttributeError:
        bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–∏–Ω—å—Ç–µ –ø–æ—Å—Ç–µ—Ä –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞')
        bot.register_next_step_handler(message, change_event_photo, event_name)
    except BaseException as error:
        bot.send_message(message.chat.id, f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ö–æ–¥–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:\n{error}, func \"start_message\". –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–∏–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ @hlebbezdrozhevoy')
        bot.register_next_step_handler(message, change_event_photo, event_name)


def main_menu_markup(id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    info_list = get_personal_info(id)
    if info_list and info_list[0][6] == True:
        markup.add(btn2, btn7, btn4, btn5)
    elif info_list:
        markup.add(btn2, btn3, btn15, btn6)
    else:
        markup.add(btn1, btn15, btn6)
    return markup
    

def get_event_info(message, name):
    try:
        conn = sqlite3.connect('database.sql')
        cur = conn.cursor()
        cur.execute('SELECT * FROM `%s`' % (name))
        info = cur.fetchall()
        cur.close()
        conn.close()
        return info
    except sqlite3.Error as error:
        markup = main_menu_markup(message.chat.id)
        bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{error}\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–∏–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ @hlebbezdrozhevoy', reply_markup=markup)
    except BaseException as error:
        bot.send_message(message.chat.id, f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ö–æ–¥–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:\n{error}, func \"get_event_info\"\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–∏–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ @hlebbezdrozhevoy')


def get_all_info(message):
    try:
        conn = sqlite3.connect('database.sql')
        cur = conn.cursor()
        cur.execute('SELECT * FROM users')
        info = cur.fetchall()
        cur.close()
        conn.close()
        return info
    except sqlite3.Error as error:
        markup = main_menu_markup(message.chat.id)
        bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\n{error}', reply_markup=markup)
    except BaseException as error:
        bot.send_message(message.chat.id, f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ö–æ–¥–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:\n{error}, func \"get_all_info\"\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–∏–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ @hlebbezdrozhevoy')


def get_personal_info(user_id):
    try:
        conn = sqlite3.connect('database.sql')
        cur = conn.cursor()
        cur.execute('SELECT * FROM users WHERE id = ?', (user_id, ))
        info = cur.fetchall()
        cur.close()
        conn.close()
        return info
    except sqlite3.Error as error:
        markup = main_menu_markup(user_id)
        bot.send_message(user_id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\n{error}', reply_markup=markup)
    except BaseException as error:
        bot.send_message(user_id, f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ö–æ–¥–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:\n{error}, func \"get_personal_info\"\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–∏–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ @hlebbezdrozhevoy')


def change_user_data_from_input(message, field):
    try:
        if type(message.text) != str:
            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
            bot.register_next_step_handler(message, change_user_data_from_input, field)
            return
        data = message.text
        if field == 'course':
            try: 
                data = int(data)
            except ValueError:
                bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
                bot.register_next_step_handler(message, change_user_data_from_input, 'course')
                return
                
        change_user_data(message, field, data)
        info = get_personal_info(message.from_user.id)

        if field == 'institute' and data.upper() == '–ú–ì–Æ–ê':
            bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –≤ –≤–∏–¥–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ò–ë–ü"')
            bot.register_next_step_handler(message, change_user_data_from_input, 'faculty')
            return
        elif field == 'institute' and info[0][3] != '–ú–ì–Æ–ê' and info[0][4] != '':
            change_user_data(message, 'faculty', '')

        markup = main_menu_markup(message.from_user.id)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã', reply_markup=markup)
    except:
        bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        bot.register_next_step_handler(message, change_user_data_from_input, field)
        return



def change_user_data(message, field, data):
    try:
        if field == 'institute' or field == 'faculty':
            data = data.upper()
        conn = sqlite3.connect('database.sql')
        cur = conn.cursor()
        request = sql_request_to_change_data(field)
        cur.execute(request, (data, message.from_user.id))
        conn.commit()
        cur.close()
        conn.close()
    except sqlite3.Error as error:
        markup = main_menu_markup(message.chat.id)
        bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\n{error}', reply_markup=markup)
    except BaseException as error:
        bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        bot.register_next_step_handler(message, change_user_data, field, data)
        return


def user_agreement(message):
    try:
        if message.text == "‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω":
            markup = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û, –ø–æ–ª–Ω–æ—Å—Ç—å—é', reply_markup=markup)
            bot.register_next_step_handler(message, fill_user_FIO)
        elif message.text == "‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω":
            markup = main_menu_markup(message.from_user.id)
            bot.send_message(message.chat.id, '–ß—Ç–æ –∂, —ç—Ç–æ –¥–æ–≤–æ–ª—å–Ω–æ —á–µ—Å—Ç–Ω–æ', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–ù–∞–∂–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω" –∏–ª–∏ "‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω"')
            bot.register_next_step_handler(message, user_agreement)
    except:
        bot.send_message(message.chat.id, '–ù–∞–∂–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω" –∏–ª–∏ "‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω"')
        bot.register_next_step_handler(message, user_agreement)


def fill_user_FIO(message):
    try:
        if type(message.text) != str:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û, –ø–æ–ª–Ω–æ—Å—Ç—å—é, –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞')
            bot.register_next_step_handler(message, fill_user_FIO)
            return
        FIO = message.text
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≤—É–∑–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ú–ì–Æ–ê"')
        bot.register_next_step_handler(message, fill_user_institute, FIO)
    except:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û, –ø–æ–ª–Ω–æ—Å—Ç—å—é, –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞')
        bot.register_next_step_handler(message, fill_user_FIO)


def fill_user_institute(message, FIO):
    try:
        institute = message.text
        if institute.upper() == '–ú–ì–Æ–ê':
            bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –≤ –≤–∏–¥–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ò–ë–ü"')
            bot.register_next_step_handler(message, fill_user_faculty, FIO, institute.upper())
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç')
            bot.register_next_step_handler(message, registration, FIO, institute)
    except:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≤—É–∑–∞ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ú–ì–Æ–ê"')
        bot.register_next_step_handler(message, fill_user_institute, FIO)


def fill_user_faculty(message, FIO, institute):
    try:    
        faculty = message.text.upper()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç')
        bot.register_next_step_handler(message, registration, FIO, institute, faculty)
    except:
        bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –≤ –≤–∏–¥–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ò–ë–ü"')
        bot.register_next_step_handler(message, fill_user_institute, FIO)


def registration(message, FIO, institute, faculty=''):
    try: 
        course_num = int(message.text)
    except:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, registration, FIO, institute, faculty)
        return
    institute = institute.upper()
    faculty = faculty.upper()
    try:        
        conn = sqlite3.connect('database.sql')
        cur = conn.cursor()
        cur.execute('INSERT INTO users (id, chat_id, FIO, institute, faculty, course, admin_rights) VALUES (%s, %s, "%s", "%s", "%s", %s, %s)' % (message.from_user.id, message.chat.id, FIO, institute, faculty, course_num, False))
        conn.commit()
        cur.close()
        conn.close()
    except sqlite3.IntegrityError:
        markup = main_menu_markup(message.from_user.id)
        bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', reply_markup=markup)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(btn2, btn3, btn15, btn6)
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –º—ã —Ç–µ–±—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏!', reply_markup=markup)


def sql_request_to_change_data(field):
    if field == 'FIO':
        return 'UPDATE users SET FIO = ? WHERE id = ?'
    elif field == 'institute':
        return 'UPDATE users SET institute = ? WHERE id = ?'
    elif field == 'faculty':
        return 'UPDATE users SET faculty = ? WHERE id = ?'
    elif field == 'course':
        return 'UPDATE users SET course = ? WHERE id = ?'
    elif field == 'admin_rights':
        return 'UPDATE users SET admin_rights = ? WHERE id = ?'


if __name__ == '__main__':
    bot.polling(none_stop=True)
